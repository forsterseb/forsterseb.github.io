import*as THREE from"./vendors/three.module.min.js";import{OrbitControls}from"./vendors/OrbitControls.min.js";import{GLTFLoader}from"./vendors/GLTFLoader.min.js";let mixer;const clock=new THREE.Clock,renderer=new THREE.WebGLRenderer;let container=document.getElementById("greetingModel");renderer.setSize(container.offsetWidth,container.offsetHeight),container.appendChild(renderer.domElement);const scene=new THREE.Scene;scene.background=new THREE.Color(15597564);const camera=new THREE.PerspectiveCamera(70,container.offsetWidth/container.offsetHeight,.1,1e3);camera.position.set(0,1.7,1);const controls=new OrbitControls(camera,renderer.domElement);controls.target=new THREE.Vector3(0,1.5,0),controls.update();const loader=new GLTFLoader;loader.load("/static/models/model_anim.glb",(function(gltf){let model=gltf.scene;scene.add(model);const animations=gltf.animations;mixer=new THREE.AnimationMixer(model),mixer.clipAction(gltf.animations[0]).play(),animate(),container.classList.remove("loader")}),void 0,(function(error){console.error(error)}));var light=new THREE.AmbientLight(16777215);function animate(){requestAnimationFrame(animate);const delta=clock.getDelta();mixer.update(delta),resizeCanvasToDisplaySize(),renderer.render(scene,camera)}function resizeCanvasToDisplaySize(){const canvas=renderer.domElement,width=container.offsetWidth,height=container.offsetHeight;canvas.width===width&&canvas.height===height||(renderer.setSize(width,height,!0),camera.aspect=width/height,camera.updateProjectionMatrix())}scene.add(light);